[{"/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/Desk/index.tsx":"1","/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/DeskView/index.tsx":"2","/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/Desk/theme.ts":"3","/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/DeskView/theme.ts":"4","/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/DeskView/App.tsx":"5","/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/Desk/App.tsx":"6","/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/Desk/context.ts":"7","/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/DeskView/lang.ts":"8","/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/DeskView/context.ts":"9","/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/Desk/lang.ts":"10","/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/DeskView/View.tsx":"11","/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/utils.ts":"12","/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/Desk/Editor/index.tsx":"13","/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/Desk/DeskList/index.tsx":"14","/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/Desk/Editor/Form.tsx":"15"},{"size":643,"mtime":1615558151787,"results":"16","hashOfConfig":"17"},{"size":643,"mtime":1615558151789,"results":"18","hashOfConfig":"17"},{"size":3236,"mtime":1616260350254,"results":"19","hashOfConfig":"17"},{"size":2919,"mtime":1616260378753,"results":"20","hashOfConfig":"17"},{"size":1537,"mtime":1616210693128,"results":"21","hashOfConfig":"17"},{"size":2054,"mtime":1616211933019,"results":"22","hashOfConfig":"17"},{"size":4208,"mtime":1616254546913,"results":"23","hashOfConfig":"17"},{"size":792,"mtime":1616255319073,"results":"24","hashOfConfig":"17"},{"size":3504,"mtime":1616254784344,"results":"25","hashOfConfig":"17"},{"size":2903,"mtime":1616255307708,"results":"26","hashOfConfig":"17"},{"size":13623,"mtime":1616258668004,"results":"27","hashOfConfig":"17"},{"size":309,"mtime":1615558151791,"results":"28","hashOfConfig":"17"},{"size":2459,"mtime":1616245872895,"results":"29","hashOfConfig":"17"},{"size":13360,"mtime":1616258620581,"results":"30","hashOfConfig":"17"},{"size":7586,"mtime":1616260393475,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"du6gcj",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/Desk/index.tsx",[],["65","66"],"/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/DeskView/index.tsx",[],"/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/Desk/theme.ts",[],"/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/DeskView/theme.ts",[],"/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/DeskView/App.tsx",[],"/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/Desk/App.tsx",["67"],"import React, { useEffect, useState } from 'react';\nimport Context, { useStore } from './context';\nimport { IMessage } from '../type';\nimport { reCreateLang } from './lang';\nimport DeskList from './DeskList';\nimport Editor from './Editor';\n\ntype ReceivedMessage = IMessage<\n    'completeInit' | 'updateSnippetsInfo' | 'changeLanguage' | 'editSnippet' | 'setLanguages'\n>;\n\nfunction App() {\n    const [initFinished, setInitFinished] = useState(false);\n    const store = useStore();\n    const { state, dispatch } = store;\n\n    useEffect(() => {\n        const vscode = window.acquireVsCodeApi();\n        dispatch({ type: 'setVscode', data: vscode });\n        vscode.postMessage({ type: 'prepareToInit' });\n        // eslint-disable-next-line;\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener('message', (event: MessageEvent<ReceivedMessage>) => {\n            const message = event.data;\n            switch (message.type) {\n                case 'updateSnippetsInfo':\n                    dispatch({ type: 'updateSnippetsInfo', data: message.data });\n                    break;\n                case 'changeLanguage':\n                    reCreateLang(message.data);\n                    break;\n                case 'completeInit':\n                    setInitFinished(true);\n                    break;\n                case 'editSnippet':\n                    dispatch({ type: 'setEditting', data: message.data });\n                    dispatch({ type: 'switchPage', data: 'editor' });\n                    break;\n                case 'setLanguages':\n                    dispatch({ type: 'setLanguages', data: message.data });\n                    break;\n                default:\n                    break;\n            }\n        });\n        // eslint-disable-next-line\n    }, []);\n\n    if (!initFinished) {\n        return null;\n    }\n\n    return (\n        <Context.Provider value={store}>\n            {state.page === 'list' && <DeskList />}\n            {state.page === 'editor' && <Editor />}\n        </Context.Provider>\n    );\n}\n\nexport default App;\n","/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/Desk/context.ts",[],"/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/DeskView/lang.ts",[],"/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/DeskView/context.ts",[],"/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/Desk/lang.ts",[],"/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/DeskView/View.tsx",[],"/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/utils.ts",[],"/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/Desk/Editor/index.tsx",["68"],"import React, { useEffect } from 'react';\nimport { omit } from 'lodash';\nimport { Breadcrumb, BreadcrumbItem, Button, Text } from '@chakra-ui/react';\nimport lang from '../lang';\nimport { useDeskContext } from '../context';\nimport Form from './Form';\nimport { ISnippet } from '../../type';\n\nfunction Editor() {\n    const { state, dispatch } = useDeskContext();\n    const {\n        snippetsInfo: { projectSnippetsInfo, generalSnippetsInfo },\n        editing,\n        languages,\n        vscode\n    } = state;\n    const { fsPath = '', snippetName = '' } = editing || {};\n    const snippetsInfoItem = generalSnippetsInfo[fsPath] || projectSnippetsInfo[fsPath];\n    const snippetInfo = snippetsInfoItem.snippets[snippetName];\n    const extname = snippetsInfoItem.extname;\n    const setScope = extname === '.code-snippets';\n\n    useEffect(() => {\n        if (!editing) {\n            dispatch({ type: 'switchPage', data: 'list' });\n            return;\n        }\n\n        if (!languages.length) {\n            vscode?.postMessage({ type: 'getLanguages' });\n        }\n    }, []);\n\n    const handleConfirm = (name: string, info: ISnippet) => {\n        const type = generalSnippetsInfo[fsPath] ? 'general' : 'workspace';\n        const snippets = omit(snippetsInfoItem.snippets, snippetName);\n        snippets[name] = info;\n        vscode?.postMessage({\n            type: snippetName ? 'editSnippet' : 'addSnippet',\n            data: { type, fsPath, snippets }\n        });\n        handleCancel();\n    };\n\n    const handleCancel = () => {\n        dispatch({ type: 'setEditting', data: undefined });\n        dispatch({ type: 'switchPage', data: 'list' });\n    };\n\n    return (\n        <div>\n            <Breadcrumb mb=\"24\">\n                <BreadcrumbItem>\n                    <Button variant=\"link\" onClick={() => dispatch({ type: 'switchPage', data: 'list' })}>\n                        {lang.SnippetList()}\n                    </Button>\n                </BreadcrumbItem>\n                <BreadcrumbItem>\n                    <Text>{snippetName ? lang.EditSnippet() : lang.AddSnippet()}</Text>\n                </BreadcrumbItem>\n            </Breadcrumb>\n            <Form\n                setScope={setScope}\n                languages={languages}\n                snippetName={snippetName}\n                snippetInfo={snippetInfo}\n                onConfirm={handleConfirm}\n                onCancel={handleCancel}\n            />\n        </div>\n    );\n}\n\nexport default Editor;\n","/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/Desk/DeskList/index.tsx",[],"/Users/hswx/personal/project/snippet-for-vscode/packages/snippet-webview/src/Desk/Editor/Form.tsx",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":22,"column":8,"nodeType":"75","endLine":22,"endColumn":10,"suggestions":"76"},{"ruleId":"73","severity":1,"message":"77","line":32,"column":8,"nodeType":"75","endLine":32,"endColumn":10,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["81"],"React Hook useEffect has missing dependencies: 'dispatch', 'editing', 'languages.length', and 'vscode'. Either include them or remove the dependency array.",["82"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},"Update the dependencies array to be: [dispatch]",{"range":"87","text":"88"},"Update the dependencies array to be: [dispatch, editing, languages.length, vscode]",{"range":"89","text":"90"},[746,748],"[dispatch]",[1064,1066],"[dispatch, editing, languages.length, vscode]"]